@startuml
'https://plantuml.com/activity-diagram-beta

start
:Proxy.newProxyInstance
:Proxy
:获取代理对象;

:checkProxyAccess
:Proxy
:系统安全检查，是否能生成代理对象;

:getProxyClass0
:Proxy
:查找或者生成代理对象;

:proxyClassCache.get(Proxy)
:WeakCache
:经过interface的长度验证后，首先从WeakCache缓存中获取，或者创建代理对象;

:CacheKey.valueOf
:WeakCache.CacheKey
:要获得缓存，首先生成缓存中对应的key对象，该key对象要重写hashCode和equals方法，为了map存储和查询;

:map.get
:WeakCache
:根据生成的cacheKey从缓存中获取对应的valuesMap;

:subKeyFactory.apply
:Proxy.KeyFactory
:根据KeyFactory生成valuesMap中获取缓存需要的subkey;

:valuesMap.get
:WeakCache
:从valuesMap中根据生成的subKey取得需要的代理对象;

:while
:WeakCache
:通过一个while循环，处理各种情况后，返回一个代理对象

:Factory.get
:WeakCache.Factory
:在while循环中，如果是首次，需要创建一个代理对象，这里获取一个新代理对象;


:valueFactory.apply
:Proxy.ProxyClassFactory
:这里是生成代理对象的准备工作，包括判断验证传入的接口是否符合规则，接口和类加载器是否能够对应，预先生成包名以及类名等等;


:ProxyGenerator.generateProxyClass
:Proxy.ProxyClassFactory
:生成具体的代理对象字节;



:cons.newInstance(Proxy);

stop

@enduml
